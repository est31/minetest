#!/bin/sh

# Update/create the minetest X11 icon

# An auxiliary function to abort processing with an optional error
# message
abort() {
	test -n "$1" && echo >&2 "$1"
	exit 1
}

dir_of_script="$(dirname "$(which "$0")")"

# Get the png2argb binary path from $PATH.
png2argb_path="$(which png2argb)"

# Fall back to png2argb from $1, to allow users
# to enable users to invoke png2argb without
# having to mess with PATH.
test -x "$png2argb_path" || png2argb_path="$(which $1)"

test -x "$png2argb_path" || abort \
"png2argb not found.
Please download png2argb from https://github.com/ZZYZX/png2argb
and pass the executable's path as first argument to this script."

# Check that the inkscape binary is inside $PATH.
# No fallback for this, as inkscape is usually available
# from package managers.
test -x "$(which inkscape)" || abort \
"inkscape not found.
Please install inkscape so that it is inside your PATH."

cd "$dir_of_script/.."

tmp_dir="/tmp/$(basename $0).$$"

mkdir -p $tmp_dir

sizes_list="16 32 64"
for wh in $sizes_list; do
	inkscape -z -e "$tmp_dir/minetest_$wh.png" -w "$wh" -h "$wh" misc/minetest.svg
	# Useful for development
	#convert "$tmp_dir/minetest_$wh.png" \
	#	-pointsize 14 -fill black -draw "text 10,10 '$wh'" \
	#	-define png:color-type=6 "$tmp_dir/minetest-$wh.png"
	mv "$tmp_dir/minetest_$wh.png" "$tmp_dir/minetest-$wh.png"
done

# Now create the file.

output_file=src/minetest-x11-icon.h

echo "Writing output..."

cat <<EOF > $output_file
// This file contains an xlib-compatible representation of the minetest icon.
// It was automatically generated from misc/minetest.svg using the
// util/update_x11_icon_header.sh script.
// DO NOT EDIT THIS FILE!!

#ifndef MINETEST_X11_ICON_H
#define MINETEST_X11_ICON_H

#ifdef XORG_USED

EOF

$png2argb_path "$tmp_dir"/minetest-*.png >> $output_file

sed -i "s/unsigned //;s/buffer/g_minetest_x11_icon_buffer/" $output_file

# Add comments about what those two numbers mean.
sed -i "s/^\(\t[^,]*,[^,]*,\)$/\1 \/\/ Icon size/" $output_file

# Break lines after 8 characters.
# The second sed command is to prevent trailing spaces.
# We could probably achieve something similar with clang-format,
# but that will 1. align, and 2. use spaces for indent.
# There are config options to tell clang-format to use tabs, but
# clang-format doesn't really follow them as much as we'd like.
# Aligning with spaces makes the array look more nice,
# but means about 60% increase in file size.
# With newlines only, we only get a ~2% increase,
# but gain already lots of readability.
sed -i "s/\([^,]*,[^,]*,[^,]*,[^,]*,[^,]*,[^,]*,[^,]*,[^,]*,\)\s/\1\n\t/g;s/\s$//" $output_file

cat <<EOF >> $output_file

#endif

#endif // MINETEST_X11_ICON_H

EOF

echo "Output written to $output_file"

rm -r $tmp_dir
